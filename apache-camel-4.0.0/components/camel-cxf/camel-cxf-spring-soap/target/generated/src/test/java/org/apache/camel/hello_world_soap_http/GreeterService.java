package org.apache.camel.hello_world_soap_http;

import java.net.MalformedURLException;
import java.net.URL;
import jakarta.annotation.Generated;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 4.0.2
 * 2023-09-20T21:17:56.640+01:00
 * Generated source version: 4.0.2
 *
 */
@WebServiceClient(name = "GreeterService",
                  wsdlLocation = "file:/Users/anuragvuppala/anurag-projects/live_f1/apache-camel-4.0.0/components/camel-cxf/camel-cxf-spring-soap/src/test/resources/hello_world_wssec.wsdl",
                  targetNamespace = "http://camel.apache.org/hello_world_soap_http")
@Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00", comments = "Apache CXF 4.0.2")
public class GreeterService extends Service {

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public final static URL WSDL_LOCATION;

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public final static QName SERVICE = new QName("http://camel.apache.org/hello_world_soap_http", "GreeterService");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public final static QName GreeterSecurityPolicyPort = new QName("http://camel.apache.org/hello_world_soap_http", "GreeterSecurityPolicyPort");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public final static QName GreeterUsernameTokenPort = new QName("http://camel.apache.org/hello_world_soap_http", "GreeterUsernameTokenPort");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public final static QName GreeterEncryptionPort = new QName("http://camel.apache.org/hello_world_soap_http", "GreeterEncryptionPort");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public final static QName GreeterSignaturePort = new QName("http://camel.apache.org/hello_world_soap_http", "GreeterSignaturePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/anuragvuppala/anurag-projects/live_f1/apache-camel-4.0.0/components/camel-cxf/camel-cxf-spring-soap/src/test/resources/hello_world_wssec.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(GreeterService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/anuragvuppala/anurag-projects/live_f1/apache-camel-4.0.0/components/camel-cxf/camel-cxf-spring-soap/src/test/resources/hello_world_wssec.wsdl");
        }
        WSDL_LOCATION = url;
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public GreeterService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public GreeterService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public GreeterService() {
        super(WSDL_LOCATION, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public GreeterService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public GreeterService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public GreeterService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterSecurityPolicyPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public Greeter getGreeterSecurityPolicyPort() {
        return super.getPort(GreeterSecurityPolicyPort, Greeter.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterSecurityPolicyPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public Greeter getGreeterSecurityPolicyPort(WebServiceFeature... features) {
        return super.getPort(GreeterSecurityPolicyPort, Greeter.class, features);
    }


    /**
     *
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterUsernameTokenPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public Greeter getGreeterUsernameTokenPort() {
        return super.getPort(GreeterUsernameTokenPort, Greeter.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterUsernameTokenPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public Greeter getGreeterUsernameTokenPort(WebServiceFeature... features) {
        return super.getPort(GreeterUsernameTokenPort, Greeter.class, features);
    }


    /**
     *
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterEncryptionPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public Greeter getGreeterEncryptionPort() {
        return super.getPort(GreeterEncryptionPort, Greeter.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterEncryptionPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public Greeter getGreeterEncryptionPort(WebServiceFeature... features) {
        return super.getPort(GreeterEncryptionPort, Greeter.class, features);
    }


    /**
     *
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterSignaturePort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public Greeter getGreeterSignaturePort() {
        return super.getPort(GreeterSignaturePort, Greeter.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterSignaturePort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-09-20T21:17:56.640+01:00")
    public Greeter getGreeterSignaturePort(WebServiceFeature... features) {
        return super.getPort(GreeterSignaturePort, Greeter.class, features);
    }

}
