<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.9-->

<plugin>
  <name>Camel :: Maven Plugins :: Camel Maven Package</name>
  <description>Maven plugin to help package Camel components and plugins</description>
  <groupId>org.apache.camel</groupId>
  <artifactId>camel-package-maven-plugin</artifactId>
  <version>4.0.0</version>
  <goalPrefix>camel-package</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <requiredJavaVersion>17</requiredJavaVersion>
  <requiredMavenVersion>3.9.4</requiredMavenVersion>
  <mojos>
    <mojo>
      <goal>generate</goal>
      <description>Used by Apache Camel project itself - do NOT use as end user.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.GenerateMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>showStaleFiles</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <showStaleFiles implementation="boolean" default-value="${showStaleFiles}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-and-attach-archetype-catalog</goal>
      <description>Creates the Maven catalog for the Camel archetypes</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PackageArchetypeCatalogMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>outDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated archetypes</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <outDir implementation="java.io.File" default-value="${project.build.directory}/classes/"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-component</goal>
      <description>To be used by 3rd party Camel component developers to generate metadata.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.GenerateComponentMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>showStaleFiles</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <showStaleFiles implementation="boolean" default-value="${showStaleFiles}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-component-dsl</goal>
      <description>Generate Endpoint DSL source files for Components.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.ComponentDslMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>baseDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The base directory</description>
        </parameter>
        <parameter>
          <name>buildDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>componentsDslFactoriesPackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The package where to generate component DSL specific factories</description>
        </parameter>
        <parameter>
          <name>componentsDslPackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The package where to the main DSL component package is</description>
        </parameter>
        <parameter>
          <name>componentsMetadata</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Component Metadata file</description>
        </parameter>
        <parameter>
          <name>jsonDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The catalog directory where the component json files are</description>
        </parameter>
        <parameter>
          <name>outputResourcesDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Components DSL Metadata</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory</description>
        </parameter>
      </parameters>
      <configuration>
        <baseDir implementation="java.io.File" default-value="${project.basedir}"/>
        <buildDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <componentsDslFactoriesPackageName implementation="java.lang.String" default-value="org.apache.camel.builder.component.dsl">${camel.pmp.factories-package-name}</componentsDslFactoriesPackageName>
        <componentsDslPackageName implementation="java.lang.String" default-value="org.apache.camel.builder.component">${camel.pmp.package-name}</componentsDslPackageName>
        <jsonDir implementation="java.io.File" default-value="${project.basedir}/../../catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/components">${camel.pmp.json-directory}</jsonDir>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-components-list</goal>
      <description>Analyses the Camel plugins in a project and generates extra descriptor information for easier auto-discovery in Camel.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PackageComponentMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>buildDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>componentOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated components file</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <buildDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <componentOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-configurer</goal>
      <description>Generate configurer classes from @Configurer annotated classes for main sources.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.GenerateConfigurerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <requiresDependencyCollection>compile</requiresDependencyCollection>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>allowBuilderPattern</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to also allow using fluent builder style as configurer (getXXX and withXXX style).</description>
        </parameter>
        <parameter>
          <name>classes</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>To generate configurer for these classes. The syntax is either fqn or fqn=targetFqn. This allows to map source class to target class to generate the source code using a different classname.</description>
        </parameter>
        <parameter>
          <name>discoverClasses</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to discover configurer classes from classpath by scanning for @Configurer annotations. This requires using jandex-maven-plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>resourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated resource source code</description>
        </parameter>
        <parameter>
          <name>skipDeprecated</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to skip deprecated methods.</description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated java source code</description>
        </parameter>
      </parameters>
      <configuration>
        <allowBuilderPattern implementation="boolean" default-value="false"/>
        <discoverClasses implementation="boolean" default-value="true"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <resourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <skipDeprecated implementation="boolean" default-value="false"/>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-dataformats-list</goal>
      <description>Analyses the Camel plugins in a project and generates extra descriptor information for easier auto-discovery in Camel.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PackageDataFormatMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>configurerResourceOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated dataformats file</description>
        </parameter>
        <parameter>
          <name>configurerSourceOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated dataformats file</description>
        </parameter>
        <parameter>
          <name>dataFormatOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated dataformats file</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>schemaOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated dataformats file</description>
        </parameter>
      </parameters>
      <configuration>
        <configurerResourceOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <configurerSourceOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
        <dataFormatOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <schemaOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-eips-list</goal>
      <description>Analyses the Camel EIPs in a project and generates extra descriptor information for easier auto-discovery in Camel.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PackageModelMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>buildDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The camel-core directory</description>
        </parameter>
        <parameter>
          <name>outDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated models file</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <buildDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <outDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-endpoint-dsl</goal>
      <description>Generate Endpoint DSL source files for Components.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.EndpointDslMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>baseDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The base directory</description>
        </parameter>
        <parameter>
          <name>buildDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>componentsFactoriesPackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The package where to generate component specific Endpoint factories</description>
        </parameter>
        <parameter>
          <name>componentsMetadata</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Component Metadata file</description>
        </parameter>
        <parameter>
          <name>endpointFactoriesPackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The package where to generate component Endpoint factories</description>
        </parameter>
        <parameter>
          <name>jsonDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The catalog directory where the component json files are</description>
        </parameter>
        <parameter>
          <name>outputResourcesDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Components DSL Metadata</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory</description>
        </parameter>
      </parameters>
      <configuration>
        <baseDir implementation="java.io.File" default-value="${project.basedir}"/>
        <buildDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <componentsFactoriesPackageName implementation="java.lang.String" default-value="org.apache.camel.builder.endpoint.dsl"/>
        <endpointFactoriesPackageName implementation="java.lang.String" default-value="org.apache.camel.builder.endpoint"/>
        <jsonDir implementation="java.io.File" default-value="${project.basedir}/../../catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/components"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-endpoint-schema</goal>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.EndpointSchemaGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>resourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <classesDirectory implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <resourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-endpoint-uri-factory</goal>
      <description>Abstract class for endpoint uri factory generator.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.GenerateEndpointUriFactoryMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <requiresDependencyCollection>compile</requiresDependencyCollection>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>buildDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>resourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <buildDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <resourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-invoke-on-header</goal>
      <description>Abstract class for @InvokeOnHeader factory generator.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.GenerateInvokeOnHeaderMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <requiresDependencyCollection>compile</requiresDependencyCollection>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>buildDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>resourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <buildDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <resourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-jaxb-list</goal>
      <description>Analyses the Camel plugins in a project and generates extra descriptor information for easier auto-discovery in Camel.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.PackageJaxbMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>index</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the index file. Default&apos;s to &apos;target/classes/META-INF/jandex.idx&apos;</description>
        </parameter>
        <parameter>
          <name>jaxbIndexOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated components file</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <index implementation="java.io.File" default-value="${project.build.directory}/META-INF/jandex.idx"/>
        <jaxbIndexOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-languages-list</goal>
      <description>Analyses the Camel plugins in a project and generates extra descriptor information for easier auto-discovery in Camel.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PackageLanguageMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>buildDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>languageOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated languages file</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>schemaOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated languages file</description>
        </parameter>
      </parameters>
      <configuration>
        <buildDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <languageOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <schemaOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-legal</goal>
      <description>Analyses the Camel plugins in a project and generates legal files.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>prepare-package</phase>
      <implementation>org.apache.camel.maven.packaging.PackageLegalMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>legalOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated components file</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <legalOutDir implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-others-list</goal>
      <description>Analyses the Camel plugins in a project and generates extra descriptor information for easier auto-discovery in Camel.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PackageOtherMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>otherOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>schemaOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <otherOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <schemaOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-postcompile</goal>
      <description>Used by Apache Camel project itself - do NOT use as end user.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.GeneratePostCompileMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>showStaleFiles</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <showStaleFiles implementation="boolean" default-value="${showStaleFiles}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-schema</goal>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.SchemaGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>resourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <classesDirectory implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <resourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-spi</goal>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.SpiGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>resourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <classesDirectory implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <resourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-test-configurer</goal>
      <description>Generate configurer classes from @Configurer annotated classes for test sources.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.GenerateTestConfigurerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <requiresDependencyCollection>compile</requiresDependencyCollection>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>allowBuilderPattern</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to also allow using fluent builder style as configurer (getXXX and withXXX style).</description>
        </parameter>
        <parameter>
          <name>classes</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>To generate configurer for these test classes. The syntax is either fqn or fqn=targetFqn. This allows to map source class to target class to generate the source code using a different classname.</description>
        </parameter>
        <parameter>
          <name>discoverClasses</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to discover configurer classes from classpath by scanning for @Configurer annotations. This requires using jandex-maven-plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>resourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated test resource source code</description>
        </parameter>
        <parameter>
          <name>skipDeprecated</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to skip deprecated methods.</description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated test java source code</description>
        </parameter>
      </parameters>
      <configuration>
        <allowBuilderPattern implementation="boolean" default-value="false"/>
        <discoverClasses implementation="boolean" default-value="true"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <resourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/test/resources"/>
        <skipDeprecated implementation="boolean" default-value="false"/>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/test/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-type-converter-loader</goal>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.TypeConverterLoaderGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>resourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <classesDirectory implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <resourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-xml-parser</goal>
      <description>Generate Model lightweight XML Parser source code.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.ModelXmlParserGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>generateXmlParser</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <generateXmlParser implementation="boolean" default-value="${camel-generate-xml-parser}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-xml-writer</goal>
      <description>Generate Model lightweight XML Writer source code.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.XmlModelWriterGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>generateXmlWriter</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <generateXmlWriter implementation="boolean" default-value="${camel-generate-xml-writer}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>generate-yaml-writer</goal>
      <description>Generate Model lightweight YAML Writer source code.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.YamlModelWriterGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>generateYamlWriter</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>sourcesOutputDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <generateYamlWriter implementation="boolean" default-value="${camel-generate-yaml-writer}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <sourcesOutputDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>jandex</goal>
      <description>Generate a Jandex index for classes compiled as part of the current project.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.PackageJandexMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>index</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the index file. Default&apos;s to &apos;target/classes/META-INF/jandex.idx&apos;</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>showStaleFiles</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <classesDirectory implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <index implementation="java.io.File" default-value="${project.build.directory}/classes/META-INF/jandex.idx"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <showStaleFiles implementation="boolean" default-value="${showStaleFiles}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-catalog</goal>
      <description>Prepares the camel catalog to include component, data format, and eip descriptors, and generates a report.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PrepareCatalogMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>componentsDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The components directory where all the Apache Camel components are</description>
        </parameter>
        <parameter>
          <name>componentsOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for components catalog</description>
        </parameter>
        <parameter>
          <name>coreDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The camel-core directory</description>
        </parameter>
        <parameter>
          <name>dataFormatsOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for dataformats catalog</description>
        </parameter>
        <parameter>
          <name>dslDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DSL directory</description>
        </parameter>
        <parameter>
          <name>languagesDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The camel-core-languages directory</description>
        </parameter>
        <parameter>
          <name>languagesOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for languages catalog</description>
        </parameter>
        <parameter>
          <name>mainDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory where the camel-main metadata are</description>
        </parameter>
        <parameter>
          <name>mainOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for main</description>
        </parameter>
        <parameter>
          <name>modelDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The camel-model directory</description>
        </parameter>
        <parameter>
          <name>modelsOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for models catalog</description>
        </parameter>
        <parameter>
          <name>othersOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for others catalog</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>repoSession</name>
          <type>org.eclipse.aether.RepositorySystemSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>schemasOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for XML schemas catalog</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the execution of this mojo</description>
        </parameter>
        <parameter>
          <name>springDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory where the camel-spring XML models are</description>
        </parameter>
        <parameter>
          <name>springSchemaDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory where the camel-spring XML schema are</description>
        </parameter>
        <parameter>
          <name>validate</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to validate if the components, data formats, and languages are properly documented and have all the needed details.</description>
        </parameter>
      </parameters>
      <configuration>
        <componentsDir implementation="java.io.File" default-value="${project.basedir}/../../components"/>
        <componentsOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/components"/>
        <coreDir implementation="java.io.File" default-value="${project.basedir}/../../core/"/>
        <dataFormatsOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/dataformats"/>
        <dslDir implementation="java.io.File" default-value="${project.basedir}/../../dsl"/>
        <languagesDir implementation="java.io.File" default-value="${project.basedir}/../../core/camel-core-languages"/>
        <languagesOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/languages"/>
        <mainDir implementation="java.io.File" default-value="${project.basedir}/../../core/camel-main/target/classes/META-INF"/>
        <mainOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/main"/>
        <modelDir implementation="java.io.File" default-value="${project.basedir}/../../core/camel-core-model"/>
        <modelsOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/models"/>
        <othersOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/others"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repoSession implementation="org.eclipse.aether.RepositorySystemSession" default-value="${repositorySystemSession}"/>
        <repositories implementation="java.util.List" default-value="${project.remoteProjectRepositories}"/>
        <schemasOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/schemas"/>
        <skip implementation="boolean" default-value="false">${camel.prepare-catalog.skip}</skip>
        <springDir implementation="java.io.File" default-value="${project.basedir}/../../components/camel-spring-xml"/>
        <springSchemaDir implementation="java.io.File" default-value="${project.basedir}/../../components/camel-spring-xml/target/schema"/>
        <validate implementation="java.lang.Boolean" default-value="true"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.eclipse.aether.RepositorySystem</role>
          <field-name>repoSystem</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-components</goal>
      <description>Prepares a Camel component analyzing if the maven module contains Camel 
* components 
* dataformats 
* languages 
* others And for each of those generates extra descriptors and schema files for easier auto-discovery in Camel and tooling.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PrepareComponentMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>baseDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The base directory</description>
        </parameter>
        <parameter>
          <name>buildDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>componentOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated components file</description>
        </parameter>
        <parameter>
          <name>configurerResourceOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated components file</description>
        </parameter>
        <parameter>
          <name>configurerSourceOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated components file</description>
        </parameter>
        <parameter>
          <name>dataFormatOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated dataformats file</description>
        </parameter>
        <parameter>
          <name>languageOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated languages file</description>
        </parameter>
        <parameter>
          <name>otherOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated others file</description>
        </parameter>
        <parameter>
          <name>prepareComponent</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>schemaOutDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated schema file</description>
        </parameter>
      </parameters>
      <configuration>
        <baseDir implementation="java.io.File" default-value="${project.basedir}"/>
        <buildDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <componentOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <configurerResourceOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <configurerSourceOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/java"/>
        <dataFormatOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <languageOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <otherOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
        <prepareComponent implementation="boolean" default-value="${camel-prepare-component}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <schemaOutDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-example</goal>
      <description>Prepares the readme.md files content up to date with all the examples that Apache Camel ships.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PrepareExampleMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>filter</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>filterMiddleFolder</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>startingFolder</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <filter implementation="java.lang.String" default-value="camel-example">${filter}</filter>
        <filterMiddleFolder implementation="java.lang.String">${filterMiddleFolder}</filterMiddleFolder>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <startingFolder implementation="java.lang.String" default-value="examples">${startingFolder}</startingFolder>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-kamelet-main</goal>
      <description>Prepares camel-kamelet-main</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.PrepareKameletMainMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>catalogDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The camel-catalog directory</description>
        </parameter>
        <parameter>
          <name>genDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <catalogDir implementation="java.io.File" default-value="${project.directory}/../../../catalog/camel-catalog"/>
        <genDir implementation="java.io.File" default-value="src/generated/"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-main</goal>
      <description>Prepares camel-main by updating main documentation.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.PrepareCamelMainDocMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>docDocDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The documentation directory</description>
        </parameter>
        <parameter>
          <name>mainJsonFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The documentation directory</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <docDocDir implementation="java.io.File" default-value="${project.basedir}/src/main/docs"/>
        <mainJsonFile implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/META-INF/camel-main-configuration-metadata.json"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-main-doc</goal>
      <description>Prepares camel-main by generating Camel Main configuration metadata for tooling support.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.PrepareCamelMainMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>outFolder</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated spring boot tooling file</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <outFolder implementation="java.io.File" default-value="${project.basedir}/src/main/doc"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>update-camel-releases</goal>
      <description>Unfortunately we do not have a release timestamp for every Camel release published to maven. So we need to grab the dates from camel-website git repository.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.camel.maven.packaging.UpdateCamelReleasesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>outDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated file</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <outDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/releases"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>update-main-helper</goal>
      <description>Updates camel-main with the known component, data-format, and language names.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.UpdateMainHelper</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>baseDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>propertiesDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <baseDir implementation="java.io.File" default-value="${project.basedir}/"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <propertiesDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>update-readme</goal>
      <description>Generate or updates the component/dataformat/language/eip documentation .adoc files in the project src/main/docs directory.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.UpdateReadmeMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>buildDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The project build directory</description>
        </parameter>
        <parameter>
          <name>componentDocDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The component documentation directory</description>
        </parameter>
        <parameter>
          <name>dataformatDocDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The dataformat documentation directory</description>
        </parameter>
        <parameter>
          <name>eipDocDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The EIP documentation directory</description>
        </parameter>
        <parameter>
          <name>failFast</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to fail the build fast if any Warnings was detected.</description>
        </parameter>
        <parameter>
          <name>languageDocDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The language documentation directory</description>
        </parameter>
        <parameter>
          <name>languageDocDir2</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The other language documentation directory</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <buildDir implementation="java.io.File" default-value="${project.build.directory}"/>
        <componentDocDir implementation="java.io.File" default-value="${project.basedir}/src/main/docs"/>
        <dataformatDocDir implementation="java.io.File" default-value="${project.basedir}/src/main/docs"/>
        <languageDocDir implementation="java.io.File" default-value="${project.basedir}/src/main/docs"/>
        <languageDocDir2 implementation="java.io.File" default-value="${project.basedir}/src/main/docs/modules/languages/pages"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>update-sensitive-helper</goal>
      <description>Updates the SensitiveHelper.java with the known secret option names</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.UpdateSensitizeHelper</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>baseDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>jsonDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <baseDir implementation="java.io.File" default-value="${project.basedir}/"/>
        <jsonDir implementation="java.io.File" default-value="${project.basedir}/src/generated/resources/org/apache/camel/catalog/"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>validate-components</goal>
      <description>Validate a Camel component analyzing if the meta-data files for 
* components 
* dataformats 
* languages all contains the needed meta-data such as assigned labels, documentation for each option</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.ValidateComponentMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>outDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output directory for generated components file</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>validate</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to validate if the components, data formats, and languages are properly documented and have all the needed details.</description>
        </parameter>
      </parameters>
      <configuration>
        <outDir implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <validate implementation="java.lang.Boolean" default-value="true"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.build.BuildContext</role>
          <field-name>buildContext</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>xref-check</goal>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.camel.maven.packaging.XRefCheckMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-util-json</artifactId>
      <type>jar</type>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-tooling-util</artifactId>
      <type>jar</type>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-tooling-model</artifactId>
      <type>jar</type>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.mvel</groupId>
      <artifactId>mvel2</artifactId>
      <type>jar</type>
      <version>2.5.0.Final</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.5</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.5</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.7.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.13.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>2.0.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <type>jar</type>
      <version>3.9.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <type>jar</type>
      <version>3.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-tree</artifactId>
      <type>jar</type>
      <version>3.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.0.0.v20140518</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.0.0.v20140518</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-build-api</artifactId>
      <type>jar</type>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-build-api</artifactId>
      <type>jar</type>
      <version>0.0.7</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.13.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <type>jar</type>
      <version>1.10.0</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.forge.roaster</groupId>
      <artifactId>roaster-api</artifactId>
      <type>jar</type>
      <version>2.28.0.Final</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.forge.roaster</groupId>
      <artifactId>roaster-jdt</artifactId>
      <type>jar</type>
      <version>2.28.0.Final</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye</groupId>
      <artifactId>jandex</artifactId>
      <type>jar</type>
      <version>3.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-tree</artifactId>
      <type>jar</type>
      <version>9.5</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <type>jar</type>
      <version>9.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>spi-annotations</artifactId>
      <type>jar</type>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <type>jar</type>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>jakarta.activation</groupId>
      <artifactId>jakarta.activation-api</artifactId>
      <type>jar</type>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.snakeyaml</groupId>
      <artifactId>snakeyaml-engine</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <type>jar</type>
      <version>2.1.1</version>
    </dependency>
  </dependencies>
</plugin>